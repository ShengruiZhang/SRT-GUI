\documentclass{article}

\usepackage{amssymb}
\usepackage{graphicx}
\graphicspath{ {images/} }

\usepackage[a4paper, left=25mm, top=25mm]{geometry}
\usepackage[utf8]{inputenc}
\usepackage{vhistory}

\setlength{\parskip}{1em}
\setlength{\parindent}{0em}
\setlength{\baselineskip}{2em}


% --------------Main document------------------------------
% ---------------------------------------------------------
\begin{document}

% -------Title page begins-------------
\begin{titlepage}
  \begin{center}
    
    \vspace*{5cm}
    \huge Student Radio Telescope (SRT)
    
    \vspace*{2cm}
    \Large Graphical User Interface User Manual
    
    \vspace*{2cm}
    \large Document Number: 3000\\
    Revision: draft-0.1
    
    \vspace*{2.0cm}
    \large
    Team 21039\\
    Spring 2021
    
  \end{center}
\end{titlepage}
% -------Title page ends---------------

\tableofcontents
\pagebreak

\section{Revision History}
\begin{itemize}
  \item 2021-04-28: Draft created
\end{itemize}


\section{Graphical User Interface (GUI) Overview}
The Student Radio Telescope (SRT) Graphical User Interface (GUI) is the front-end for interfacing and controlling the SRT.

As of writing this manual, the GUI only have capability to perform basic telescope movement. Tracking and other improvement are future goals and were outside the requirement/scope of the Team 21039.

As of most other Capstone projects, this GUI is written in \textbf{Python} for simplicity and fast deployment. The GUI toolkit is \textbf{PySimpleGUI}, probably the easiest one to get started comparing to others.

Python3.7 was used during the development, newer version might be used but they are not tested and verified.

The GUI was developed under a Debian 10 GNU/Linux environment, so the rest of this manual assumes such. Since Python and the GUI toolkit are corss-platform, there should be no problem to fork the software to other platforms; only slight modification are needed such as the name of the USB-Serial port. 

\section{Open the GUI}

In an GNU/Linux environment, and after cloning the repo, the GUI can be opened via command line: python3.7 main.py

\section{GUI Layout}

If the GUI is opened correctly, there are should be four windows, the main control, two position dials, and a output window.

The main control is where essential operations take place; position dials simply keeps track of the position of the telescope in a visual way. The output window shows (error) message generated by the software for debugging.

Despite the output window mostly provides informational messages, it does output error and debug messages. Keep in mind that currently the outputs will not be saved upon exiting the GUI.

\section{Main Control Function}
This section documents the various functions of the main control GUI window. This window has the title: \textbf{\textit{Student Radio Telescope Control}}
\subsection{Menu Bar}
\subsection{Three main buttons}
\subsection{Coordinate Entry}
\subsection{System Status}
\subsection{Jogging}
\subsection{System Settings}
\subsection{Data Output}

\section{Operating Procedure}

\end{document}
